<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="qna">
 
 	<!-- 글쓰기 저장 -->
 	<insert id="qna_insert" parameterType="qnabean">
 		insert into qna_board values
			(qna_seq.nextval, #{qna_id}, #{qna_subject}
			,#{qna_type}, #{qna_body}, #{qna_code}
			,#{qna_file, jdbcType=VARCHAR}, #{qna_hits}, SYSDATE, 0) 
 	</insert>
 	
 	
 	
 	
 	<!-- 파라미터 값이 all이었을 때 글의 갯수 구하기 -->
 	<select id="qna_allcount" resultType="int">
 		select count(*) from qna_board
 	</select>
 	
 	<!-- 파라미터 값이 all이 아닌 다른 값일 때 글의 갯수 구하기 -->
 	<select id="qna_listcount" parameterType="java.util.Map" resultType="int">
 		select count(*) from qna_board where qna_type = #{state}
 	</select>
 	
 	<!-- 내글 보기를 클릭했을 때 글의 갯수 구하기 -->
 	<select id="qna_mycount" parameterType="java.util.Map" resultType="int">
 		select count(*) from qna_board where qna_id = #{searchID}
 	</select>
 	
 	 	
 	<!-- 전체보기 선택시 게시글 받아 오기 -->
 	<select id="qna_allList" parameterType="java.util.Map" resultType="qnabean">
 		<![CDATA[
 		select*from(
			select rownum rnum, qna_num, qna_id, qna_subject,
			qna_type, qna_body, qna_code,
			qna_file, qna_hits, qna_date, qna_reply from(
				select*from qna_board order by qna_num desc))
		where rnum >= ((#{page}-1) * #{limit}+1)  and rnum <= (#{page} * #{limit})
 		]]>
 	</select>
 	 	
 	<!-- 전체보기가 아닌 다른 게시판 선택시 게시글 받아오기 -->
 	<select id="qna_list" parameterType="java.util.Map" resultType="qnabean">
 		<![CDATA[
 		select*from(
			select rownum rnum, qna_num, qna_id, qna_subject,
			qna_type, qna_body, qna_code,
			qna_file, qna_hits, qna_date, qna_reply from(
				select*from qna_board order by qna_num desc)
			where qna_type = #{state}
			)
		where rnum >= ((#{page}-1) * #{limit}+1)  and rnum <= (#{page} * #{limit}) 
 		]]>
 	</select>
 	
 	<!-- 내 글 보기를 클릭했을 경우 -->
 	<select id="qna_mylist" parameterType="java.util.Map" resultType="qnabean">
 		<![CDATA[
 		select*from(
			select rownum rnum, qna_num, qna_id, qna_subject,
			qna_type, qna_body, qna_code,
			qna_file, qna_hits, qna_date, qna_reply from(
				select*from qna_board order by qna_num desc))
		where rnum >= ((#{page}-1) * #{limit}+1)  and rnum <= (#{page} * #{limit}) 
		and qna_id = #{searchID}
 		]]>
 	</select>
 	
 
 	
 	<!-- 댓글 불러오기 -->
 	<select id="qna_getreply" parameterType="int" resultType="qnarebean">
 		select*from qna_reply where qna_re_num=#{qna_num} 
 		order by qna_re_ref desc, 
 		qna_re_seq desc
 	</select>
 	
 	
 	
 	<!-- 댓글에 글 순서 올리기 -->
 	<update id="qna_level" parameterType="qnarebean">
 		update qna_reply set qna_re_seq = qna_re_seq+1
 		where qna_re_ref = #{qna_re_ref}
 		and qna_re_num = #{qna_re_num}
 	</update>
 	
 	<!-- 댓글달기 -->
 	<insert id="qna_reply_write" parameterType="qnarebean">
 		insert into qna_reply values(
 			#{qna_re_num}, #{qna_re_id}, #{qna_re_body}, 
 			0, 0, 0, SYSDATE
 		)
 	</insert>
 	
 	<!-- 댓글의 댓글 달기 -->
 	<insert id="qna_re_reply_write" parameterType="qnarebean">
 		insert into qna_reply values(
			#{qna_re_num}, #{qna_re_id}, #{qna_re_body},
			#{qna_re_ref}, #{qna_re_lev}, 0, SYSDATE)
 	</insert>
 	
 	
 	
 	<!-- 댓글수 가져오기 -->
 	<select id="qna_replycount" parameterType="int" resultType="int">
 		select qna_reply from qna_board where qna_num = #{qna_num}
 	</select>
 	
 	<!-- 댓글수 업데이트 -->
 	<update id="qna_replyCountUpdate" parameterType="java.util.Map">
 		update qna_board set qna_reply = #{replyCount}
 		where qna_num = #{qna_num}
 	</update>
 	
 	<!-- 같은 아이디로 계속 댓글을 쓸 경우에 구분할 수 있는 숫자를 높여 준다. -->
 	<update id="qna_re_ref_update" parameterType="java.util.Map">
 		update qna_reply set qna_re_ref = qna_re_ref+1
 		where qna_re_num = #{qna_num}
 	</update>
 	
 	
 	<!-- 글 삭제 -->
 	<delete id="qna_delete" parameterType="int">
 		delete from qna_board where qna_num=#{qna_num}
 	</delete>
 	<!-- 글 삭제 시 댓글도 같이 삭제 -->
 	<delete id="qna_reply" parameterType="int">
 		delete from qna_reply where qna_re_num=#{qna_num}
 	</delete>
 	
 	
 	<!-- 댓글 삭제 -->
 	<delete id="qna_delete_reply" parameterType="java.util.Map">
 		delete from qna_reply 
 		where qna_re_num=#{qna_num}
 		and qna_re_ref=#{qna_re_ref}
 		and qna_re_seq=#{qna_re_seq}
 	</delete>
 		
 		
 	<!-- 상세보기에서 조회수 올리기 -->
 	<update id="qna_hits" parameterType="int">
 		update qna_board set qna_hits=qna_hits+1 where qna_num=#{qna_num}
 	</update>
 	
 	<!-- 상세보기 -->
 	<select id="qna_detail" parameterType="int" resultType="qnabean">
 		select*from qna_board where qna_num=#{qna_num}
 	</select>
 	<!-- 글보기 페이지에서 이전글, 다음글 보기를 위한 쿼리문 -->
 	<select id="qna_prev_detail" parameterType="java.util.Map" resultType="qnabean">
 		<![CDATA[
 		select*from(
			select rownum rnum, qna_num, qna_id, qna_subject,
			qna_type, qna_body, qna_code,
			qna_file, qna_hits, qna_date, QNA_REPLY from(
				select*from qna_board order by qna_num desc
			)
		)where rnum =(select rnum from(
							select rownum rnum, qna_num, qna_id, qna_subject,
							qna_type, qna_body, qna_code,
							qna_file, qna_hits, qna_date, QNA_REPLY from(
								select*from qna_board order by qna_num desc
							)
						)where qna_num = #{qna_num}+1
					)
					or rnum = (select rnum from(
							select rownum rnum, qna_num, qna_id, qna_subject,
							qna_type, qna_body, qna_code,
							qna_file, qna_hits, qna_date, QNA_REPLY from(
								select*from qna_board order by qna_num desc
							)
						)where qna_num = #{qna_num}
					)or rnum = (select rnum from(
							select rownum rnum, qna_num, qna_id, qna_subject,
							qna_type, qna_body, qna_code,
							qna_file, qna_hits, qna_date, QNA_REPLY from(
								select*from qna_board order by qna_num desc
							)
						)where qna_num = #{qna_num}-1
					) 
		]]>
 	</select>
 	
 	<!-- 글 수정 -->
 	<update id="qna_edit" parameterType="qnabean">
 		update qna_board set 
 		qna_subject=#{qna_subject}, qna_type=#{qna_type},
 		qna_body=#{qna_body}, qna_code=#{qna_code}, 
 		qna_date = SYSDATE where qna_num = #{qna_num}
 	</update>
 	
 	<!-- 검색한 글에 갯수 가져오기 -->
 	<select id="qna_search_count" parameterType="java.util.Map" resultType="int">
 		select count(*) from qna_board
 		where qna_type = #{search} and qna_subject like #{search_body}
 	</select>
 	<!-- 글 검색 -->
 	<select id="qna_search_list" parameterType="java.util.Map" resultType="qnabean">
 	<![CDATA[
 		select*from(
 			select rownum rnum, qna_num, qna_id, qna_subject,
			qna_type, qna_body, qna_code,
			qna_file, qna_hits, qna_date, QNA_REPLY from(
				select*from qna_board ]]>
				<where>
					<if test="search == 'all'"></if>
					<if test="search != 'all'">
						 qna_type=#{search}
					</if>
				</where>
		<![CDATA[
				where qna_subject like #{search_body}
				order by qna_num desc
			)
 		)where rnum >= ((#{page}-1) * #{limit}+1)  and rnum <= (#{page} * #{limit})
 	]]>
 	</select>
 </mapper>