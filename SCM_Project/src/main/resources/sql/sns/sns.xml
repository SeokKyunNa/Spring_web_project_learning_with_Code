<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Sns">

	<!-- sns글 개수 구하기 -->
	<select id="sns_getListCount" resultType="int">
		select count(*) from
		sns
	</select>
	
	<!-- sns 최신글 user 불러오기-->
	<select id="sns_user_list" resultType="snsbean">
	select write_user,write_pic,write_num from sns order by write_num desc
	</select>
	
	<!-- 좋아요한 글 개수 구하기 -->
	<select id="sns_getgoodCount" resultType="int" parameterType="String">
		select count(*) from good INNER JOIN sns ON good.goodnum =
		sns.write_num where goodid= #{goodid} order by goodnum
	</select>

	<!-- sns글 삭제 -->
	<delete id="sns_delete" parameterType="int">
		delete from sns where write_num=#{sns_num}
	</delete>

	<!-- sns글 목록(내글) -->
	<select id="sns_list" parameterType="java.util.Map" resultType="snsbean">
		select * from
		(select rownum rnum, write_num, write_user,write_body,
		write_date, write_good, write_file ,write_pic, write_reply
		from
		(select
		* from
		sns order by write_num
		desc))
		where
		rnum<![CDATA[>]]>=#{startrow}
		and rnum<![CDATA[<]]>=#{endrow}
		and write_user = #{sns_user}
	</select>


	<!-- sns글 목록 -->
	<select id="sns_list_all" parameterType="java.util.Map"
		resultType="snsbean">
		select * from
		(select rownum rnum, write_num, write_user,write_body,
		write_date, write_good, write_file ,write_pic, write_reply
		from
		(select
		* from
		sns order by write_num
		desc))
		where
		rnum<![CDATA[>]]>=#{startrow}
		and rnum<![CDATA[<]]>=#{endrow}
	</select>

	<!-- sns글 목록 -->
	<select id="sns_list_good" parameterType="String" resultType="snsbean">
		select good.* from good
		left outer join sns on good.goodnum = sns.write_num
		where goodid = #{id}
	</select>



	<!-- sns 글 저장 -->
	<insert id="sns_insert" parameterType="snsbean">
		insert into sns (write_num,write_user,write_body,
		write_good,write_date,write_file,write_pic,write_reply)
		values(sns_num_seq.nextVal,#{write_user},#{write_body},
		0,sysdate,#{write_file2, jdbcType=VARCHAR},#{write_pic},0)
	</insert>

	<!-- sns 글 내용 가져오기 -->
	<select id="sns_cont" resultType="snsbean" parameterType="int">
		select * from sns where write_num=#{num}
	</select>

	<!-- sns글 수정 -->
	<update id="sns_edit" parameterType="snsbean">
		update sns set
		write_body=#{write_body}, write_file=#{write_file2, jdbcType=VARCHAR}
		where write_num=#{write_num}
	</update>

	<!-- sns 댓글의 원글번호 검색 -->
	<select id="sns_reply" parameterType="int" resultType="int">
		select WRITE_NUM from sns where WRITE_NUM = #{write_num}
	</select>

	<!-- sns 댓글 저장 -->
	<insert id="sns_re_insert" parameterType="snsbean">
		insert into sns_reply
		(reply_wnum,reply_num,reply_user,reply_body,
		reply_pic,reply_date)
		values
		(#{reply_wnum},sns_seq.nextval,#{reply_user},#{reply_body},
		#{reply_pic},sysdate)
	</insert>

	<!-- sns 댓글 내용 가져오기 -->
	<select id="reply_cont" resultType="snsbean" parameterType="int">
		select * from sns_reply INNER JOIN sns ON sns_reply.reply_wnum =
		sns.write_num where write_num= #{write_num} order by REPLY_DATE
	</select>

	<!-- sns 좋아요 추가 -->
	<insert id="sns_good_insert" parameterType="java.util.Map">
		insert into
		good
		(goodnum, goodid)
		values
		(#{goodnum, jdbcType=NUMERIC},
		#{goodid})
	</insert>

	<!-- sns 좋아요 삭제 -->
	<delete id="sns_good_delete" parameterType="java.util.Map">
		delete from
		good
		where
		goodnum=#{goodnum, jdbcType=NUMERIC} AND
		goodid=#{goodid}
	</delete>

	<!-- sns 좋아요 누적(추가) -->
	<update id="good_update_in" parameterType="int">
		update sns set WRITE_GOOD = WRITE_GOOD+1 where WRITE_NUM = #{num}
	</update>

	<!-- sns 좋아요 누적(삭제) -->
	<update id="good_update_de" parameterType="int">
		update sns set WRITE_GOOD = WRITE_GOOD-1 where WRITE_NUM = #{num}
	</update>

	<!-- sns글 삭제 -->
	<delete id="reply_delete" parameterType="java.util.Map">
		delete from sns_reply where reply_wnum=#{wnum} and reply_num= #{num}
	</delete>

	<!-- sns 댓글 수 누적(추가) -->
	<update id="reply_update_in" parameterType="int">
		update sns set WRITE_REPLY = WRITE_REPLY+1 where WRITE_NUM = #{num}
	</update>

	<!-- sns 댓글 수 누적(삭제) -->
	<update id="reply_update_de" parameterType="int">
		update sns set WRITE_REPLY = WRITE_REPLY-1 where WRITE_NUM = #{num}
	</update>

	<!-- 내가 쓴 글 갯수 -->
	<select id="count_sns" parameterType="String" resultType="int">
		select count(*) from sns where write_user = #{id}
	</select>

	<!-- 좋아요한 글 목록보기 -->
	<select id="sns_list_good1" parameterType="java.util.Map"
		resultType="snsbean">
		
		select * from
		(select rownum rnum, write_num, write_user,write_body,
		write_date, write_good, write_file ,write_pic, write_reply
		from
		(select * from good INNER JOIN sns ON good.goodnum = sns.write_num where
		goodid=#{goodid} order by goodnum desc))
		where
		rnum<![CDATA[>]]>=#{startrow}
		and rnum<![CDATA[<]]>=#{endrow}
	</select>
</mapper>






















