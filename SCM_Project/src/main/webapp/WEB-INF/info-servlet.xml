<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	 <!-- http://www.springframework.org/schema/beans/spring-beans-3.0.xsd -->
	 
	  <!-- Handler Mapping은 @Controller 애노테이션이 적용된 빈 객체가 
	   처리할 수 있는 요청 경로만 대응할 수 있습니다. -->
	   <mvc:annotation-driven/>   
	  
	   <!-- 요청 경로외에 대해서 대응할 수 있도록 합니다. -->
	    <!--  <mvc:default-servlet-handler />	 --> 
	
	  
 <!-- /*비번찾기 폼*/
	@RequestMapping(value="/pwd_find.nhn")
	public String pwd_find(){
		return "member/pwd_find";
	컨트롤러 클래스는 특별히 처리할 것이 없어 단순히 뷰 이름만 리턴하도록 구현한 경우 아래와 같이 작성하면 됩니다.	
  -->
	  <mvc:view-controller path="/pwd_find.nhn" view-name="member/pwd_find"/> 
	 
	 
	 
	  <!-- 사용자  회원관리 액션클래스  -->
	  <bean id="memberAction" class="action.mem.MemberAction"
	  p:memberService-ref="memberService" />
	  
	 
	 
	<!-- ViewResolver -->
	<bean id="internalResourceViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
		<property name="prefix">
			<value>jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
</beans>


